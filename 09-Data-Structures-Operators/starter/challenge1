'use strict';
const game = {
  team1: 'Bayern Munich',
  team2: 'Borrussia Dortmund',
  players: [
    [
      'Neuer',
      'Pavard',
      'Martinez',
      'Alaba',
      'Davies',
      'Kimmich',
      'Goretzka',
      'Coman',
      'Muller',
      'Gnarby',
      'Lewandowski',
    ],
    [
      'Burki',
      'Schulz',
      'Hummels',
      'Akanji',
      'Hakimi',
      'Weigl',
      'Witsel',
      'Hazard',
      'Brandt',
      'Sancho',
      'Gotze',
    ],
  ],
  score: '4:0',
  scored: ['Lewandowski', 'Gnarby', 'Lewandowski', 'Hummels'],
  date: 'Nov 9th, 2037',
  odds: {
    team1: 1.33,
    x: 3.25,
    team2: 6.5,
  },
};

// const [players1, players2] = game.players;

// const [gk, ...fieldPlayers] = players1;
// // console.log(players1);
// const allPlayers = [...players1, ...players2];
// console.log(allPlayers);

// const players1Final = [...players1, 'Thiago', 'Coutinho', 'Peristic'];

// const {
//   odds: { team1, x= draw, team2 },
// } = game;
// console.log(team1, draw, team2);

// const printGoals = function (...players) {
//   console.log(players);
//   console.log(`${players.length} goals were scored`);
// };
// // printGoals('Davies', 'Kimmich', 'Muller', 'Lewandowski');
// printGoals(...game.scored);

// team1 < team2 && console.log('Team1 is more likely to win ');
// team1 > team2 && console.log('Team2 is more likely to win ');

// challenge2
const scorer = [...game.scored];
console.log(scorer);
for (const [i, ele] of scorer.entries()) console.log(`Goal ${i + 1}:${ele}`);
// for (const item of scorer) console.log(item);
let average = 0;
for (const value of Object.values(game.odds)) {
  // console.log(value);
  // let average = 0;
  average += value;
  // console.log(average / odds.length);
}
console.log(average / 3);

// const {
//   odds: { team1, x: draw, team2 },
// } = game;
// console.log(team1, draw, team2);
// console.log(team1, draw, team2);
for (const [key, value] of Object.entries(game.odds)) {
  console.log(`odds of victory ${game[key] || 'draw'}:${value}`);
  // console.log(Object.entries(game.odds));
}

const scorer2 = {};
for (const item of game.scored) {
  // console.log(item);
  // debugger;
  if (!scorer2[item]) {
    scorer2[item] = 1;
  } else {
    scorer2[item] += 1;
  }
}
console.log(scorer2);

// challenge3
const gameEvents = new Map([
  [17, '丘쬂잺 GOAL'],
  [36, '游대 Substitution'],
  [47, '丘쬂잺 GOAL'],
  [61, '游대 Substitution'],
  [64, '游댰 Yellow card'],
  [69, '游댮 Red card'],
  [70, '游대 Substitution'],
  [72, '游대 Substitution'],
  [76, '丘쬂잺 GOAL'],
  [80, '丘쬂잺 GOAL'],
  [92, '游댰 Yellow card'],
]);

// 1
const events = [...new Set([...gameEvents.values()])];
console.log(events);

// 2
gameEvents.delete(64);
console.log(gameEvents);

// 3
console.log(
  `An event happened,on average,every ${90 / gameEvents.size} minutes`
);

// 4
for (const [key, value] of gameEvents) {
  const half = key <= 45 ? 'FIRST' : 'SECOND';
  console.log(`[${half} HALF] ${key} : ${value}`);
}

// challenge4
document.body.append(document.createElement('textarea'));
document.body.append(document.createElement('button'));

document.querySelector('button').addEventListener('click', function () {
  const text = document.querySelector('textarea').value;
  const rows = text.split('\n');
  // console.log(rows);
  for (const [index, value] of rows.entries()) {
    const [a, b] = value.toLowerCase().trim().split('_');
    const output = `${a}${b.slice(0, 1).toUpperCase() + b.slice(1)}`.padEnd(
      20,
      ' '
    );
    console.log(`${output}${'%'.repeat(index + 1)}`);
    // debugger;
    // console.log(output);
  }
});
